const { getBotInstance } = require('../dist/bot/botInstance');
const { db } = require('../dist/database/connection');
const { analyticsService } = require('../dist/services/analytics/analyticsService');

async function sendGiftNotification() {
  console.log('üéÅ Sending Gift Notification to User 22');
  console.log('======================================');
  
  try {
    // Get User 22 data
    console.log('üîç Getting User 22 data...');
    const user22 = await db('users').where('id', 22).first();
    
    if (!user22) {
      console.log('‚ùå User 22 not found in database');
      return;
    }
    
    console.log(`üì± Found user: ${user22.username} (${user22.telegram_id})`);
    
    // Get bot instance
    const bot = await getBotInstance();
    
    // Promotional message text
    const giftMessage = `üéÅ –°–ü–ï–¶–ò–ê–õ–¨–ù–û–ï –ü–†–ï–î–õ–û–ñ–ï–ù–ò–ï!

üí∞ –ü—Ä–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ –æ—Ç $5 USD –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ +$2 USD –ë–û–ù–£–°!

‚ö° –≠—Ç–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ - —É—Å–ø–µ–π—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è!

üéÆ –ò—Ç–æ–≥–æ: –∑–∞–ø–ª–∞—Ç–∏—Ç–µ $5, –ø–æ–ª—É—á–∏—Ç–µ $7 –Ω–∞ Steam –∫–æ—à–µ–ª–µ–∫!

‚è∞ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤—É–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è!`;

    // Send message with CTA button that uses existing Steam top-up flow
    const messageOptions = {
      reply_markup: {
        inline_keyboard: [[
          { 
            text: 'üéÅ –ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫', 
            callback_data: 'fund_steam' // Use existing callback data for Steam funding
          }
        ]]
      }
    };
    
    console.log('üì§ Sending promotional message...');
    
    const sentMessage = await bot.sendMessage(user22.telegram_id, giftMessage, messageOptions);
    
    console.log('‚úÖ Message sent successfully!');
    console.log(`üì® Message ID: ${sentMessage.message_id}`);
    
    // Track analytics - gift notification sent
    await analyticsService.trackEvent(22, 'gift_notification_sent', {
      messageId: sentMessage.message_id,
      offerType: 'bonus_2usd_on_5usd',
      bonusAmount: 2,
      minimumPayment: 5,
      telegramId: user22.telegram_id,
      username: user22.username,
      buttonAction: 'fund_steam'
    });
    
    console.log('üìä Analytics tracked: gift_notification_sent');
    console.log('üí° When user clicks "–ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫", it will trigger existing Steam top-up flow');
    console.log('üìä Button clicks will be tracked by existing callback handlers');
    
  } catch (error) {
    console.error('‚ùå Error sending gift notification:', error.message);
  } finally {
    // Close database connection
    await db.destroy();
  }
  
  // Force exit after completion
  console.log('\nüö™ Exiting...');
  process.exit(0);
}

// Set a timeout to force exit if script hangs
setTimeout(() => {
  console.log('\n‚è∞ Script timeout reached, forcing exit...');
  process.exit(1);
}, 30000); // 30 second timeout

sendGiftNotification(); 