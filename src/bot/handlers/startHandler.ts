import { Message } from 'node-telegram-bot-api';
import { getBotInstance } from '../botInstance';
import { findOrCreateUser } from '../../services/user/userService';
import { logger } from '../../utils/logger';

export async function handleStartCommand(msg: Message) {
  try {
    const telegramId = msg.from?.id;
    if (!telegramId) {
      logger.warn('Received /start without user ID');
      return;
    }

    // Register or get user
    const user = await findOrCreateUser({
      id: telegramId,
      username: msg.from?.username,
      first_name: msg.from?.first_name,
      last_name: msg.from?.last_name
    });

    // Get bot instance
    const bot = await getBotInstance();

    // Welcome message with inline keyboard
    const welcomeMessage = `–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ üéÆ LootPay!

–ü–æ–ø–æ–ª–Ω—è–π Steam –∑–∞ 15 –º–∏–Ω—É—Ç
—Å —É–¥–æ–±–Ω–æ–π –æ–ø–ª–∞—Ç–æ–π, —á–µ—Å—Ç–Ω—ã–º –∫—É—Ä—Å–æ–º –∏ –±–µ–∑ —Ä–∏—Å–∫–∞ –±—ã—Ç—å –æ–±–º–∞–Ω—É—Ç—ã–º ‚è±Ô∏è

‚Ä¢ –ö–æ–º–∏—Å—Å–∏—è 10% ‚Äî —Å–∞–º–∞—è –Ω–∏–∑–∫–∞—è –Ω–∞ —Ä—ã–Ω–∫–µ
‚Ä¢ –ì–∞—Ä–∞–Ω—Ç–∏—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –ø—Ä–∏ —Å–±–æ—è—Ö 
‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7

–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?
‚ö°Ô∏è–í–≤–µ–¥–∏ Steam ID 
‚ö°Ô∏è–í—ã–±–µ—Ä–∏ —Å—É–º–º—É –∏ –æ–ø–ª–∞—Ç–∏ —á–µ—Ä–µ–∑ –°–ë–ü 
‚ö°Ô∏è–ü–æ–ª—É—á–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞—á–∏—Å–ª–µ–Ω–∏–∏ üéâ
‚ö°Ô∏è –£—á–∞—Å—Ç–≤—É–π –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ –ê—Ä–∫–∞–Ω—ã –Ω–∞ –†—É–±–∏–∫–∞ ‚Äî –∏–ª–∏ –ø–æ–ª—É—á–∞–π –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–æ–Ω—É—Å **–¥–æ $10**, –µ—Å–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –º–µ–Ω—å—à–µ 50! üéÅ

‚¨áÔ∏è –ù–∞–∂–º–∏ –Ω–∏–∂–µ –∏ –ø–æ–ø–æ–ª–Ω—è–π —Å üéÆ LootPay!`;

    const keyboard = {
      inline_keyboard: [
        [
          { text: 'üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å Steam', callback_data: 'fund_steam' },
          { text: 'üìä –ò—Å—Ç–æ—Ä–∏—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π', callback_data: 'my_transactions' }
        ],
        [
          { text: '‚ùì –ü–æ–¥–¥–µ—Ä–∂–∫–∞', callback_data: 'support' },
          { text: 'üìÑ –û –Ω–∞—Å / –û—Ñ–µ—Ä—Ç–∞/ FAQ', callback_data: 'about' }
        ]
      ]
    };

    await bot.sendMessage(msg.chat.id, welcomeMessage, {
      parse_mode: 'Markdown',
      reply_markup: keyboard
    });

    logger.info('Start command handled', {
      telegramId,
      userId: user.id,
      username: user.username
    });

  } catch (error) {
    logger.error('Error handling start command', {
      error,
      telegramId: msg.from?.id
    });
    
    // Get bot instance for error message
    const bot = await getBotInstance();
    
    // Send error message to user
    await bot.sendMessage(
      msg.chat.id,
      'üòî –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.'
    );
  }
} 