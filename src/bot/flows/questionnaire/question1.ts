import TelegramBot from 'node-telegram-bot-api';
import { logger } from '../../../utils/logger';
import { setState, UserState } from '../../../services/state/stateService';
import { saveResponse } from '../../../services/questionnaire/questionnaireService';
import { handleQuestion2 } from './question2';
import { getBotInstance } from '../../../bot/botInstance';

const QUESTION = `üìã –î–∞–≤–∞–π—Ç–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è! –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ 3 –±—ã—Å—Ç—Ä—ã—Ö –≤–æ–ø—Ä–æ—Å–∞, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –ª—É—á—à–µ –≤–∞—Å –ø–æ–Ω–∏–º–∞—Ç—å.\n\n‚ùì –ù–∞ —á—Ç–æ —á–∞—â–µ –≤—Å–µ–≥–æ —Ç—Ä–∞—Ç–∏—à—å –¥–µ–Ω—å–≥–∏ –≤ Steam?`;

const BUTTONS = [
  [{ text: 'üéÆ –ò–≥—Ä—ã ‚Äî –ø–æ–∫—É–ø–∞—é –Ω–æ–≤–∏–Ω–∫–∏ –∏ –∫–ª–∞—Å—Å–∏–∫—É', callback_data: 'q1_games' }],
  [{ text: '‚ú® –í–Ω—É—Ç—Ä–∏–∏–≥—Ä–æ–≤—ã–µ —à—Ç—É–∫–∏, –∫–µ–π—Å—ã, –±–æ–µ–≤—ã–µ –ø—Ä–æ–ø—É—Å–∫–∏', callback_data: 'q1_items' }],
  [{ text: 'üß∏ –î—Ä—É–≥–æ–µ ‚Äî —á—Ç–æ-—Ç–æ –µ—â—ë, –Ω–µ –∏–∑ —ç—Ç–æ–≥–æ', callback_data: 'q1_other' }],
  [{ text: 'üßò –í–æ–æ–±—â–µ –Ω–µ —Ç—Ä–∞—á—É ‚Äî –ø—Ä–æ—Å—Ç–æ —Å–∏–∂—É, –Ω–µ –ø–æ–∫—É–ø–∞—é', callback_data: 'q1_none' }]
];

export async function handleQuestion1(
  bot: TelegramBot,
  chatId: number,
  userId: number
): Promise<void> {
  try {
    await bot.sendMessage(
      chatId,
      QUESTION,
      {
        reply_markup: {
          inline_keyboard: BUTTONS
        }
      }
    );
    await setState(userId, 'QUESTIONNAIRE_Q1' as UserState, {});
    logger.info('Question 1 sent', { userId });
  } catch (error) {
    logger.error('Error sending question 1', { error, userId });
    throw error;
  }
}

export async function handleQuestion1Answer(
  chatId: number,
  userId: number,
  answer: string
) {
  try {
    const bot = await getBotInstance();
    await saveResponse(userId, 1, answer);
    await setState(userId, 'QUESTIONNAIRE_Q1' as UserState, {
      current_question: 2
    });
    logger.info('Saved question 1 answer', { userId, answer });
    await handleQuestion2(bot, chatId, userId);
  } catch (error) {
    logger.error('Error handling question 1 answer', { error, userId, answer });
    const bot = await getBotInstance();
    await bot.sendMessage(
      chatId,
      'üòî –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.'
    );
  }
} 